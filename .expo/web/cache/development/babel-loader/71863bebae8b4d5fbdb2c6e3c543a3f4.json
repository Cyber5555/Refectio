{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer, getFocusedRouteNameFromRoute } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AuthScreenComponent from \"./components/Auth/AuthScreen\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext } from \"./components/AuthContext/context\";\nimport LoginScreenComponent from \"./components/Auth/LoginScreen\";\nimport RegisteredScreenComponent from \"./components/Auth/RegisteredScreen\";\nimport RegistrationUserScreenComponent from \"./components/Auth/RegistrationUserScreen\";\nimport RegistrationManufacturerComponent from \"./components/Auth/RegistrationManufacturer\";\nimport ConfirmTelScreenComponent from \"./components/Auth/ConfirmTelScreen\";\nimport CustomerMainPageComponent from \"./components/Customer/CustomerMainPage\";\nimport GhostPageComponent from \"./components/Ghost/GhostPage\";\nimport GhostPageTwoComponent from \"./components/Ghost/GhostPageTwo\";\nimport DesignerPageComponent from \"./components/Designer/DesignerPage\";\nimport EditPhoneNumberComponent from \"./components/Auth/EditPhoneNumber\";\nimport DesignerPageTwoComponent from \"./components/Designer/DesignerPageTwo\";\nimport CustomerPageTwoComponent from \"./components/Customer/CustomerPageTwo\";\nimport ForgetPasswordComponent from \"./components/Auth/ForgetPassword\";\nimport ForgetPasswordTelComponent from \"./components/Auth/ForgetPasswordTel\";\nimport NewPasswordComponent from \"./components/Auth/NewPassword\";\nimport DesignerMyBroniComponent from \"./components/Designer/DesignerMyBroni\";\nimport MyAccauntComponent from \"./components/Designer/MyAccaunt\";\nimport DesignerSavedComponent from \"./components/Designer/DesignerSaved\";\nimport CustomerMyBroniComponent from \"./components/Customer/CustomerMyBroni\";\nimport CustomerRewardsComponent from \"./components/Customer/CustomerRewards\";\nimport CustomerMyAccauntComponent from \"./components/Customer/CustomerMyAccaunt\";\nimport CheckDesignerComponent from \"./components/Customer/CheckDesigner\";\nimport PraductiaComponent from \"./components/Customer/Praductia\";\nimport AddProductComponent from \"./components/Customer/AddProduct\";\nimport ModalComponent from \"./components/Ghost/Modal\";\nimport EditPhoneNumberConfirmComponent from \"./components/Auth/EditPhoneNumberConfirm\";\nimport EditPasswordCustomerCompnent from \"./components/Auth/EditPaswordCustomer\";\nimport EditPhoneNumberDesignerComponent from \"./components/Auth/EditPhoneNumberDesigner\";\nimport EditPhoneNumberDesignerConfirmComponent from \"./components/Auth/EditPhoneNumberDesignerConfirm\";\nimport EditPasswordDesignerCompnent from \"./components/Auth/EditPaswordDesigner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nfunction AuthScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(AuthScreenComponent, {\n    navigation: navigation\n  });\n}\n\nfunction LoginScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(LoginScreenComponent, {\n    navigation: navigation\n  });\n}\n\nfunction RegisteredScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsx(RegisteredScreenComponent, {\n    navigation: navigation\n  });\n}\n\nfunction RegistrationUserScreen(_ref4) {\n  var navigation = _ref4.navigation;\n  return _jsx(RegistrationUserScreenComponent, {\n    navigation: navigation\n  });\n}\n\nfunction RegistrationManufacturer(_ref5) {\n  var navigation = _ref5.navigation;\n  return _jsx(RegistrationManufacturerComponent, {\n    navigation: navigation\n  });\n}\n\nfunction ConfirmTelScreenFunction(_ref6) {\n  var route = _ref6.route,\n      navigation = _ref6.navigation;\n  var params = route.params.params;\n  return _jsx(ConfirmTelScreenComponent, {\n    token: params,\n    navigation: navigation\n  });\n}\n\nfunction CustomerMainPage(_ref7) {\n  var navigation = _ref7.navigation;\n  return _jsx(CustomerMainPageComponent, {\n    navigation: navigation\n  });\n}\n\nfunction GhostPage(_ref8) {\n  var navigation = _ref8.navigation;\n  return _jsx(GhostPageComponent, {\n    navigation: navigation\n  });\n}\n\nfunction DesignerPage(_ref9) {\n  var navigation = _ref9.navigation;\n  return _jsx(DesignerPageComponent, {\n    navigation: navigation\n  });\n}\n\nfunction EditPhoneNumber(_ref10) {\n  var navigation = _ref10.navigation;\n  return _jsx(EditPhoneNumberComponent, {\n    navigation: navigation\n  });\n}\n\nfunction EditPhoneNumberConfirm(_ref11) {\n  var route = _ref11.route,\n      navigation = _ref11.navigation;\n  var params = route.params.params;\n  return _jsx(EditPhoneNumberConfirmComponen, {\n    phoneNumb: params,\n    navigation: navigation\n  });\n}\n\nfunction EditPhoneNumberDesigner(_ref12) {\n  var navigation = _ref12.navigation;\n  return _jsx(EditPhoneNumberDesignerComponent, {\n    navigation: navigation\n  });\n}\n\nfunction EditPhoneNumberDesignerConfirm(_ref13) {\n  var route = _ref13.route,\n      navigation = _ref13.navigation;\n  var params = route.params.params;\n  return _jsx(EditPhoneNumberDesignerConfirmComponent, {\n    phoneNumb: params,\n    navigation: navigation\n  });\n}\n\nfunction EditPasswordCustomer(_ref14) {\n  var navigation = _ref14.navigation;\n  return _jsx(EditPasswordCustomerCompnent, {\n    navigation: navigation\n  });\n}\n\nfunction GhostPageTwo(_ref15) {\n  var navigation = _ref15.navigation;\n  return _jsx(GhostPageTwoComponent, {\n    navigation: navigation\n  });\n}\n\nfunction DesignerPageTwo(_ref16) {\n  var route = _ref16.route,\n      navigation = _ref16.navigation;\n  var params = route.params.params;\n  return _jsx(DesignerPageTwoComponent, {\n    user_id: params,\n    navigation: navigation\n  });\n}\n\nfunction CustomerPageTwo(_ref17) {\n  var route = _ref17.route,\n      navigation = _ref17.navigation;\n  var params = route.params.params;\n  return _jsx(CustomerPageTwoComponent, {\n    userID: params,\n    navigation: navigation\n  });\n}\n\nfunction ForgetPassword(_ref18) {\n  var navigation = _ref18.navigation;\n  return _jsx(ForgetPasswordComponent, {\n    navigation: navigation\n  });\n}\n\nfunction ForgetPasswordTel(_ref19) {\n  var navigation = _ref19.navigation;\n  return _jsx(ForgetPasswordTelComponent, {\n    navigation: navigation\n  });\n}\n\nfunction NewPassword(_ref20) {\n  var navigation = _ref20.navigation;\n  return _jsx(NewPasswordComponent, {\n    navigation: navigation\n  });\n}\n\nfunction DesignerMyBroni(_ref21) {\n  var navigation = _ref21.navigation;\n  return _jsx(DesignerMyBroniComponent, {\n    navigation: navigation\n  });\n}\n\nfunction MyAccaunt(_ref22) {\n  var navigation = _ref22.navigation;\n  return _jsx(MyAccauntComponent, {\n    navigation: navigation\n  });\n}\n\nfunction DesignerSaved(_ref23) {\n  var navigation = _ref23.navigation;\n  return _jsx(DesignerSavedComponent, {\n    navigation: navigation\n  });\n}\n\nfunction CustomerMyBroni(_ref24) {\n  var navigation = _ref24.navigation;\n  return _jsx(CustomerMyBroniComponent, {\n    navigation: navigation\n  });\n}\n\nfunction CustomerRewards(_ref25) {\n  var navigation = _ref25.navigation;\n  return _jsx(CustomerRewardsComponent, {\n    navigation: navigation\n  });\n}\n\nfunction CustomerMyAccaunt(_ref26) {\n  var navigation = _ref26.navigation;\n  return _jsx(CustomerMyAccauntComponent, {\n    navigation: navigation\n  });\n}\n\nfunction CheckDesigner(_ref27) {\n  var navigation = _ref27.navigation;\n  return _jsx(CheckDesignerComponent, {\n    navigation: navigation\n  });\n}\n\nfunction PraductiaFunc(_ref28) {\n  var route = _ref28.route,\n      navigation = _ref28.navigation;\n  var params = route.params.params;\n  return _jsx(PraductiaComponent, {\n    id: params,\n    navigation: navigation\n  });\n}\n\nfunction AddProductScreen(_ref29) {\n  var route = _ref29.route,\n      navigation = _ref29.navigation;\n  var params = route.params.params;\n  return _jsx(AddProductComponent, {\n    id: params,\n    navigation: navigation\n  });\n}\n\nfunction Modal(_ref30) {\n  var navigation = _ref30.navigation;\n  return _jsx(ModalComponent, {\n    navigation: navigation\n  });\n}\n\nvar tabBarStyle = {\n  height: 90,\n  backgroundColor: 'white',\n  elevation: 0,\n  borderTopColor: 'white',\n  width: Dimensions.get('window').width - 50,\n  marginTop: 0,\n  marginRight: 'auto',\n  marginBottom: 0,\n  marginLeft: 'auto'\n};\nexport default function App() {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userToken = _React$useState4[0],\n      setUserToken = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      userRole = _React$useState6[0],\n      setUserRole = _React$useState6[1];\n\n  var initialLoginState = {\n    isLoading: true,\n    userToken: null,\n    userRole: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.userToken,\n          userRole: action.userRole,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.userToken,\n          userRole: action.userRole,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: null,\n          userRole: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.userToken,\n          userRole: action.userRole,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function () {\n        var _signIn = _asyncToGenerator(function* (foundUser) {\n          var userToken = String(foundUser.userToken);\n          var userRole = String(foundUser.userRole);\n\n          try {\n            yield AsyncStorage.setItem('userToken', userToken);\n            yield AsyncStorage.setItem('userRole', userRole);\n            console.log(userToken, 'userToken -  AFTER LOGIN');\n            console.log(userRole, 'userRole -  AFTER LOGIN');\n          } catch (e) {\n            console.log(e);\n          }\n\n          dispatch({\n            type: 'LOGIN',\n            userToken: userToken,\n            userRole: userRole\n          });\n        });\n\n        function signIn(_x) {\n          return _signIn.apply(this, arguments);\n        }\n\n        return signIn;\n      }(),\n      signOut: function () {\n        var _signOut = _asyncToGenerator(function* (callback) {\n          try {\n            yield AsyncStorage.removeItem('userToken');\n            yield AsyncStorage.removeItem('userRole');\n            setIsLoading(false);\n          } catch (e) {\n            console.log(e);\n          }\n\n          dispatch({\n            type: 'LOGOUT'\n          });\n          callback();\n        });\n\n        function signOut(_x2) {\n          return _signOut.apply(this, arguments);\n        }\n\n        return signOut;\n      }(),\n      signUp: function signUp() {}\n    };\n  }, []);\n  React.useEffect(function () {\n    setTimeout(_asyncToGenerator(function* () {\n      var userToken;\n      var userRole;\n      userToken = null;\n      userRole = null;\n\n      try {\n        userToken = yield AsyncStorage.getItem('userToken');\n        userRole = yield AsyncStorage.getItem('userRole');\n        console.log(userToken, 'userToken');\n        console.log(userRole, 'userRole');\n        setIsLoading(false);\n        console.log('test');\n      } catch (e) {\n        console.log(e);\n      }\n\n      dispatch({\n        type: 'RETRIEVE_TOKEN',\n        userToken: userToken,\n        userRole: userRole\n      });\n    }), 1000);\n  }, []);\n\n  if (isLoading) {\n    return _jsx(View, {\n      style: {\n        backgroundColor: '#fff',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: 100,\n        color: \"#00f\"\n      })\n    });\n  } else {\n    return _jsxs(AuthContext.Provider, {\n      value: authContext,\n      children: [_jsx(StatusBar, {\n        animated: true,\n        hidden: false,\n        backgroundColor: \"white\",\n        barStyle: \"dark-content\"\n      }), _jsx(NavigationContainer, {\n        children: loginState.userToken !== null && loginState.userRole == '2' ? _jsxs(Tab.Navigator, {\n          initialRouteName: \"DesignerPage\",\n          screenOptions: function screenOptions(_ref32) {\n            var route = _ref32.route;\n            return {\n              tabBarShowLabel: false,\n              headerShown: false,\n              tabBarActiveTintColor: '#2EB6A5',\n              tabBarInactiveTintColor: 'gray',\n              tabBarStyle: tabBarStyle\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"DesignerPage\",\n            component: DesignerPageComponent,\n            options: function options(_ref33) {\n              var route = _ref33.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"DesignerMyBroni\",\n            component: DesignerMyBroniComponent,\n            options: function options(_ref34) {\n              var route = _ref34.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"DesignerPageTwo\",\n            component: DesignerPageTwo,\n            options: function options(_ref35) {\n              var route = _ref35.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"DesignerSaved\",\n            component: DesignerSavedComponent,\n            options: function options(_ref36) {\n              var route = _ref36.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"MyAccaunt\",\n            component: MyAccauntComponent,\n            options: function options(_ref37) {\n              var route = _ref37.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"EditPhoneNumberDesigner\",\n            component: EditPhoneNumberDesignerComponent,\n            options: function options(_ref38) {\n              var route = _ref38.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"EditPhoneNumberDesignerConfirm\",\n            component: EditPhoneNumberDesignerConfirm,\n            options: function options(_ref39) {\n              var route = _ref39.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"EditPasswordDesigner\",\n            component: EditPasswordDesignerCompnent,\n            options: function options(_ref40) {\n              var route = _ref40.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          })]\n        }) : loginState.userToken !== null && loginState.userRole == '3' ? _jsxs(Tab.Navigator, {\n          initialRouteName: \"CustomerMainPage\",\n          screenOptions: function screenOptions(_ref41) {\n            var route = _ref41.route;\n            return {\n              tabBarShowLabel: false,\n              headerShown: false,\n              tabBarActiveTintColor: '#2EB6A5',\n              tabBarInactiveTintColor: 'gray',\n              tabBarStyle: tabBarStyle\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"CustomerMainPage\",\n            component: CustomerMainPageComponent,\n            options: function options(_ref42) {\n              var route = _ref42.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"AddProduct\",\n            component: AddProductScreen,\n            options: function options(_ref43) {\n              var route = _ref43.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"CheckDesigner\",\n            component: CheckDesignerComponent,\n            options: function options(_ref44) {\n              var route = _ref44.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"CustomerMyAccaunt\",\n            component: CustomerMyAccauntComponent,\n            options: function options(_ref45) {\n              var route = _ref45.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"CustomerMyBroni\",\n            component: CustomerMyBroniComponent,\n            options: function options(_ref46) {\n              var route = _ref46.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"CustomerPageTwo\",\n            component: CustomerPageTwo,\n            options: function options(_ref47) {\n              var route = _ref47.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"CustomerRewards\",\n            component: CustomerRewardsComponent,\n            options: function options(_ref48) {\n              var route = _ref48.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Praductia\",\n            component: PraductiaFunc,\n            options: function options(_ref49) {\n              var route = _ref49.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"EditPhoneNumber\",\n            component: EditPhoneNumberComponent,\n            options: function options(_ref50) {\n              var route = _ref50.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"EditPhoneNumberConfirm\",\n            component: EditPhoneNumberConfirm,\n            options: function options(_ref51) {\n              var route = _ref51.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"EditPasswordCustomer\",\n            component: EditPasswordCustomerCompnent,\n            options: function options(_ref52) {\n              var route = _ref52.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          })]\n        }) : loginState.userToken == null ? _jsxs(Tab.Navigator, {\n          initialRouteName: \"GhostPage\",\n          screenOptions: function screenOptions(_ref53) {\n            var route = _ref53.route;\n            return {\n              tabBarShowLabel: false,\n              headerShown: false,\n              tabBarActiveTintColor: '#2EB6A5',\n              tabBarInactiveTintColor: 'gray',\n              tabBarStyle: tabBarStyle\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"GhostPage\",\n            component: GhostPageComponent,\n            options: function options(_ref54) {\n              var route = _ref54.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Login\",\n            component: LoginScreenComponent,\n            options: function options(_ref55) {\n              var route = _ref55.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"ConfirmTelScreen\",\n            component: ConfirmTelScreenFunction,\n            options: function options(_ref56) {\n              var route = _ref56.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"RegisteredScreen\",\n            component: RegisteredScreenComponent,\n            options: function options(_ref57) {\n              var route = _ref57.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"RegisteredUserScreen\",\n            component: RegistrationUserScreenComponent,\n            options: function options(_ref58) {\n              var route = _ref58.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"RegistrationManufacturer\",\n            component: RegistrationManufacturerComponent,\n            options: function options(_ref59) {\n              var route = _ref59.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"AuthScreen\",\n            component: AuthScreenComponent,\n            options: function options(_ref60) {\n              var route = _ref60.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"GhostPageTwo\",\n            component: GhostPageTwoComponent,\n            options: function options(_ref61) {\n              var route = _ref61.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"ForgetPassword\",\n            component: ForgetPasswordComponent,\n            options: function options(_ref62) {\n              var route = _ref62.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"ForgetPasswordTel\",\n            component: ForgetPasswordTelComponent,\n            options: function options(_ref63) {\n              var route = _ref63.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"NewPassword\",\n            component: NewPasswordComponent,\n            options: function options(_ref64) {\n              var route = _ref64.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Modal\",\n            component: ModalComponent,\n            options: function options(_ref65) {\n              var route = _ref65.route;\n              return {\n                tabBarButton: function tabBarButton() {\n                  return null;\n                },\n                tabBarStyle: {\n                  display: 'none'\n                }\n              };\n            }\n          })]\n        }) : _jsx(_Fragment, {})\n      })]\n    });\n  }\n}","map":{"version":3,"names":["React","NavigationContainer","getFocusedRouteNameFromRoute","createBottomTabNavigator","AuthScreenComponent","AsyncStorage","AuthContext","LoginScreenComponent","RegisteredScreenComponent","RegistrationUserScreenComponent","RegistrationManufacturerComponent","ConfirmTelScreenComponent","CustomerMainPageComponent","GhostPageComponent","GhostPageTwoComponent","DesignerPageComponent","EditPhoneNumberComponent","DesignerPageTwoComponent","CustomerPageTwoComponent","ForgetPasswordComponent","ForgetPasswordTelComponent","NewPasswordComponent","DesignerMyBroniComponent","MyAccauntComponent","DesignerSavedComponent","CustomerMyBroniComponent","CustomerRewardsComponent","CustomerMyAccauntComponent","CheckDesignerComponent","PraductiaComponent","AddProductComponent","ModalComponent","EditPhoneNumberConfirmComponent","EditPasswordCustomerCompnent","EditPhoneNumberDesignerComponent","EditPhoneNumberDesignerConfirmComponent","EditPasswordDesignerCompnent","Tab","AuthScreen","navigation","LoginScreen","RegisteredScreen","RegistrationUserScreen","RegistrationManufacturer","ConfirmTelScreenFunction","route","params","CustomerMainPage","GhostPage","DesignerPage","EditPhoneNumber","EditPhoneNumberConfirm","EditPhoneNumberDesigner","EditPhoneNumberDesignerConfirm","EditPasswordCustomer","GhostPageTwo","DesignerPageTwo","CustomerPageTwo","ForgetPassword","ForgetPasswordTel","NewPassword","DesignerMyBroni","MyAccaunt","DesignerSaved","CustomerMyBroni","CustomerRewards","CustomerMyAccaunt","CheckDesigner","PraductiaFunc","AddProductScreen","Modal","tabBarStyle","height","backgroundColor","elevation","borderTopColor","width","Dimensions","get","marginTop","marginRight","marginBottom","marginLeft","App","useState","isLoading","setIsLoading","userToken","setUserToken","userRole","setUserRole","initialLoginState","loginReducer","prevState","action","type","useReducer","loginState","dispatch","authContext","useMemo","signIn","foundUser","String","setItem","console","log","e","signOut","callback","removeItem","signUp","useEffect","setTimeout","getItem","flex","justifyContent","alignItems","tabBarShowLabel","headerShown","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarButton","display"],"sources":["C:/Users/Hopar/Desktop/redect/RefectionApp/App.js"],"sourcesContent":["import * as React from 'react';\r\nimport { Button, View, Text, Image, ScrollView, StyleSheet, StatusBar, Dimensions, ActivityIndicator } from 'react-native';\r\nimport { NavigationContainer, getFocusedRouteNameFromRoute } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport AuthScreenComponent from './components/Auth/AuthScreen';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { AuthContext } from './components/AuthContext/context'\r\nimport LoginScreenComponent from './components/Auth/LoginScreen';\r\nimport RegisteredScreenComponent from './components/Auth/RegisteredScreen';\r\nimport RegistrationUserScreenComponent from './components/Auth/RegistrationUserScreen';\r\nimport RegistrationManufacturerComponent from './components/Auth/RegistrationManufacturer';\r\nimport ConfirmTelScreenComponent from './components/Auth/ConfirmTelScreen';\r\nimport CustomerMainPageComponent from './components/Customer/CustomerMainPage';\r\nimport GhostPageComponent from './components/Ghost/GhostPage';\r\nimport GhostPageTwoComponent from './components/Ghost/GhostPageTwo';\r\nimport DesignerPageComponent from './components/Designer/DesignerPage';\r\nimport EditPhoneNumberComponent from './components/Auth/EditPhoneNumber';\r\nimport DesignerPageTwoComponent from './components/Designer/DesignerPageTwo';\r\nimport CustomerPageTwoComponent from './components/Customer/CustomerPageTwo';\r\nimport ForgetPasswordComponent from './components/Auth/ForgetPassword';\r\nimport ForgetPasswordTelComponent from './components/Auth/ForgetPasswordTel';\r\nimport NewPasswordComponent from './components/Auth/NewPassword';\r\nimport DesignerMyBroniComponent from './components/Designer/DesignerMyBroni';\r\nimport MyAccauntComponent from './components/Designer/MyAccaunt';\r\nimport DesignerSavedComponent from './components/Designer/DesignerSaved';\r\nimport CustomerMyBroniComponent from './components/Customer/CustomerMyBroni';\r\nimport CustomerRewardsComponent from './components/Customer/CustomerRewards';\r\nimport CustomerMyAccauntComponent from './components/Customer/CustomerMyAccaunt';\r\nimport CheckDesignerComponent from './components/Customer/CheckDesigner';\r\nimport PraductiaComponent from './components/Customer/Praductia';\r\nimport AddProductComponent from './components/Customer/AddProduct';\r\nimport ModalComponent from './components/Ghost/Modal';\r\nimport EditPhoneNumberConfirmComponent from './components/Auth/EditPhoneNumberConfirm';\r\nimport EditPasswordCustomerCompnent from './components/Auth/EditPaswordCustomer';\r\nimport EditPhoneNumberDesignerComponent from './components/Auth/EditPhoneNumberDesigner';\r\nimport EditPhoneNumberDesignerConfirmComponent from './components/Auth/EditPhoneNumberDesignerConfirm';\r\nimport EditPasswordDesignerCompnent from './components/Auth/EditPaswordDesigner';\r\n\r\n\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\nfunction AuthScreen({ navigation }) {\r\n  return (\r\n    <AuthScreenComponent navigation={navigation} />\r\n  );\r\n}\r\n\r\nfunction LoginScreen({ navigation }) {\r\n  return (\r\n    <LoginScreenComponent navigation={navigation} />\r\n  );\r\n}\r\n\r\n\r\nfunction RegisteredScreen({ navigation }) {\r\n  return (\r\n    <RegisteredScreenComponent navigation={navigation} />\r\n  );\r\n}\r\n\r\n\r\nfunction RegistrationUserScreen({ navigation }) {\r\n  return (\r\n    <RegistrationUserScreenComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction RegistrationManufacturer({ navigation }) {\r\n  return (\r\n    <RegistrationManufacturerComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\n\r\nfunction ConfirmTelScreenFunction({ route, navigation }) {\r\n\r\n  const { params } = route.params;\r\n\r\n  return (\r\n    <ConfirmTelScreenComponent token={params} navigation={navigation} />\r\n  )\r\n\r\n}\r\n\r\nfunction CustomerMainPage({ navigation }) {\r\n  return (\r\n    <CustomerMainPageComponent navigation={navigation} />\r\n  );\r\n}\r\n\r\nfunction GhostPage({ navigation }) {\r\n  return (\r\n    <GhostPageComponent navigation={navigation} />\r\n  );\r\n}\r\n\r\nfunction DesignerPage({ navigation }) {\r\n  return (\r\n    <DesignerPageComponent navigation={navigation} />\r\n  );\r\n}\r\nfunction EditPhoneNumber({ navigation }) {\r\n  return (\r\n    <EditPhoneNumberComponent navigation={navigation} />\r\n  );\r\n}\r\nfunction EditPhoneNumberConfirm({ route, navigation }) {\r\n\r\n  const { params } = route.params\r\n\r\n  return (\r\n    <EditPhoneNumberConfirmComponen phoneNumb={params} navigation={navigation} />\r\n  );\r\n}\r\n\r\nfunction EditPhoneNumberDesigner({ navigation }) {\r\n  return (\r\n    <EditPhoneNumberDesignerComponent navigation={navigation} />\r\n  );\r\n}\r\n\r\nfunction EditPhoneNumberDesignerConfirm({ route, navigation }) {\r\n\r\n  const { params } = route.params\r\n\r\n  return (\r\n    <EditPhoneNumberDesignerConfirmComponent phoneNumb={params} navigation={navigation} />\r\n  );\r\n}\r\n\r\nfunction EditPasswordCustomer({ navigation }) {\r\n  return (\r\n    <EditPasswordCustomerCompnent navigation={navigation} />\r\n  );\r\n}\r\n\r\nfunction GhostPageTwo({ navigation }) {\r\n  return (\r\n    <GhostPageTwoComponent navigation={navigation} />\r\n  );\r\n}\r\nfunction DesignerPageTwo({ route, navigation }) {\r\n\r\n  const { params } = route.params;\r\n\r\n  return (\r\n    <DesignerPageTwoComponent user_id={params} navigation={navigation} />\r\n  );\r\n}\r\n\r\nfunction CustomerPageTwo({ route, navigation }) {\r\n\r\n\r\n  const { params } = route.params;\r\n\r\n  return (\r\n    <CustomerPageTwoComponent userID={params} navigation={navigation} />\r\n  );\r\n}\r\n\r\n\r\nfunction ForgetPassword({ navigation }) {\r\n  return (\r\n    <ForgetPasswordComponent navigation={navigation} />\r\n  );\r\n}\r\nfunction ForgetPasswordTel({ navigation }) {\r\n  return (\r\n    <ForgetPasswordTelComponent navigation={navigation} />\r\n  );\r\n}\r\n\r\nfunction NewPassword({ navigation }) {\r\n  return (\r\n    <NewPasswordComponent navigation={navigation} />\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction DesignerMyBroni({ navigation }) {\r\n  return (\r\n    <DesignerMyBroniComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction MyAccaunt({ navigation }) {\r\n  return (\r\n    <MyAccauntComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction DesignerSaved({ navigation }) {\r\n  return (\r\n    <DesignerSavedComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction CustomerMyBroni({ navigation }) {\r\n  return (\r\n    <CustomerMyBroniComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction CustomerRewards({ navigation }) {\r\n  return (\r\n    <CustomerRewardsComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction CustomerMyAccaunt({ navigation }) {\r\n  return (\r\n    <CustomerMyAccauntComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction CheckDesigner({ navigation }) {\r\n  return (\r\n    <CheckDesignerComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction PraductiaFunc({ route, navigation }) {\r\n\r\n  const { params } = route.params;\r\n\r\n  return (\r\n    <PraductiaComponent id={params} navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction AddProductScreen({ route, navigation }) {\r\n\r\n  const { params } = route.params\r\n\r\n  return (\r\n    <AddProductComponent id={params} navigation={navigation} />\r\n  )\r\n}\r\n\r\nfunction Modal({ navigation }) {\r\n  return (\r\n    <ModalComponent navigation={navigation} />\r\n  )\r\n}\r\n\r\n\r\nconst tabBarStyle = {\r\n  height: 90,\r\n  backgroundColor: 'white',\r\n  elevation: 0,\r\n  borderTopColor: 'white',\r\n  width: Dimensions.get('window').width - 50,\r\n  marginTop: 0,\r\n  marginRight: 'auto',\r\n  marginBottom: 0,\r\n  marginLeft: 'auto',\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [userToken, setUserToken] = React.useState(null);\r\n  const [userRole, setUserRole] = React.useState(null);\r\n\r\n\r\n  const initialLoginState = {\r\n    isLoading: true,\r\n    userToken: null,\r\n    userRole: null\r\n  };\r\n\r\n\r\n\r\n  const loginReducer = (prevState, action) => {\r\n    switch (action.type) {\r\n      case 'RETRIEVE_TOKEN':\r\n        return {\r\n          ...prevState,\r\n          userToken: action.userToken,\r\n          userRole: action.userRole,\r\n\r\n          isLoading: false,\r\n        };\r\n      case 'LOGIN':\r\n        return {\r\n          ...prevState,\r\n          userToken: action.userToken,\r\n          userRole: action.userRole,\r\n          isLoading: false,\r\n        };\r\n      case 'LOGOUT':\r\n        return {\r\n          ...prevState,\r\n          userToken: null,\r\n          userRole: null,\r\n          isLoading: false,\r\n        };\r\n      case 'REGISTER':\r\n        return {\r\n          ...prevState,\r\n          userToken: action.userToken,\r\n          userRole: action.userRole,\r\n          isLoading: false,\r\n        };\r\n    }\r\n  };\r\n\r\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\r\n\r\n  const authContext = React.useMemo(() => ({\r\n    signIn: async (foundUser) => {\r\n      // setIsLoading(true);\r\n      const userToken = String(foundUser.userToken);\r\n      const userRole = String(foundUser.userRole);\r\n\r\n      try {\r\n        await AsyncStorage.setItem('userToken', userToken);\r\n        await AsyncStorage.setItem('userRole', userRole);\r\n\r\n        console.log(userToken, 'userToken -  AFTER LOGIN')\r\n        console.log(userRole, 'userRole -  AFTER LOGIN')\r\n\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      dispatch({ type: 'LOGIN', userToken: userToken, userRole: userRole });\r\n\r\n    },\r\n    signOut: async (callback) => {\r\n      try {\r\n        await AsyncStorage.removeItem('userToken');\r\n        await AsyncStorage.removeItem('userRole');\r\n\r\n        setIsLoading(false);\r\n\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      dispatch({ type: 'LOGOUT' });\r\n      callback();\r\n    },\r\n    signUp: () => {\r\n      // setIsLoading(false);\r\n    }\r\n  }), []);\r\n\r\n\r\n  // Проверка при входе в приложение.\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(async () => {\r\n\r\n      let userToken;\r\n      let userRole;\r\n\r\n      userToken = null;\r\n      userRole = null;\r\n\r\n      try {\r\n\r\n        // await AsyncStorage.clear()\r\n\r\n        userToken = await AsyncStorage.getItem('userToken');\r\n        userRole = await AsyncStorage.getItem('userRole');\r\n\r\n        console.log(userToken, 'userToken');\r\n        console.log(userRole, 'userRole');\r\n\r\n        setIsLoading(false);\r\n        console.log('test')\r\n\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      dispatch({ type: 'RETRIEVE_TOKEN', userToken: userToken, userRole: userRole });\r\n    }, 1000);\r\n  }, []);\r\n\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={{ backgroundColor: '#fff', flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size={100} color=\"#00f\" />\r\n      </View>\r\n    );\r\n  } else {\r\n\r\n    return (\r\n\r\n      <AuthContext.Provider value={authContext}>\r\n\r\n        <StatusBar\r\n          animated={true}\r\n          hidden={false}\r\n          backgroundColor='white'\r\n          barStyle=\"dark-content\"\r\n        />\r\n        <NavigationContainer>\r\n\r\n          {\r\n            //  Designer Pages Tabs\r\n            loginState.userToken !== null && loginState.userRole == '2' ? (\r\n              <Tab.Navigator\r\n                initialRouteName=\"DesignerPage\"\r\n                screenOptions={({ route }) => ({\r\n                  tabBarShowLabel: false,\r\n                  headerShown: false,\r\n                  tabBarActiveTintColor: '#2EB6A5',\r\n                  tabBarInactiveTintColor: 'gray',\r\n                  tabBarStyle: tabBarStyle,\r\n\r\n                })}\r\n              >\r\n                <Tab.Screen name=\"DesignerPage\" component={DesignerPageComponent}\r\n                  options={({ route }) => ({\r\n                    tabBarButton: () => null,\r\n                    tabBarStyle: { display: 'none' }\r\n                  })}\r\n                />\r\n\r\n                <Tab.Screen name=\"DesignerMyBroni\" component={DesignerMyBroniComponent}\r\n                  options={({ route }) => ({\r\n                    tabBarButton: () => null,\r\n                    tabBarStyle: { display: 'none' }\r\n                  })}\r\n                />\r\n                <Tab.Screen name=\"DesignerPageTwo\" component={DesignerPageTwo}\r\n                  options={({ route }) => ({\r\n                    tabBarButton: () => null,\r\n                    tabBarStyle: { display: 'none' }\r\n                  })}\r\n                />\r\n\r\n                <Tab.Screen name=\"DesignerSaved\" component={DesignerSavedComponent}\r\n                  options={({ route }) => ({\r\n                    tabBarButton: () => null,\r\n                    tabBarStyle: { display: 'none' }\r\n                  })}\r\n                />\r\n                <Tab.Screen name=\"MyAccaunt\" component={MyAccauntComponent}\r\n                  options={({ route }) => ({\r\n                    tabBarButton: () => null,\r\n                    tabBarStyle: { display: 'none' }\r\n                  })}\r\n                />\r\n                <Tab.Screen name=\"EditPhoneNumberDesigner\" component={EditPhoneNumberDesignerComponent}\r\n                  options={({ route }) => ({\r\n                    tabBarButton: () => null,\r\n                    tabBarStyle: { display: 'none' }\r\n                  })}\r\n                />\r\n                <Tab.Screen name=\"EditPhoneNumberDesignerConfirm\" component={EditPhoneNumberDesignerConfirm}\r\n                  options={({ route }) => ({\r\n                    tabBarButton: () => null,\r\n                    tabBarStyle: { display: 'none' }\r\n                  })}\r\n                />\r\n                 <Tab.Screen name=\"EditPasswordDesigner\" component={EditPasswordDesignerCompnent}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n              </Tab.Navigator>\r\n            ) :\r\n\r\n\r\n              // Customer Pages Tabs\r\n\r\n              loginState.userToken !== null && loginState.userRole == '3' ? (\r\n                <Tab.Navigator\r\n                  initialRouteName=\"CustomerMainPage\"\r\n                  screenOptions={({ route }) => ({\r\n                    tabBarShowLabel: false,\r\n                    headerShown: false,\r\n                    tabBarActiveTintColor: '#2EB6A5',\r\n                    tabBarInactiveTintColor: 'gray',\r\n                    tabBarStyle: tabBarStyle,\r\n\r\n                  })}\r\n                >\r\n                  <Tab.Screen name=\"CustomerMainPage\" component={CustomerMainPageComponent}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n                  <Tab.Screen name=\"AddProduct\" component={AddProductScreen}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n                  <Tab.Screen name=\"CheckDesigner\" component={CheckDesignerComponent}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n\r\n                  <Tab.Screen name=\"CustomerMyAccaunt\" component={CustomerMyAccauntComponent}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n                  <Tab.Screen name=\"CustomerMyBroni\" component={CustomerMyBroniComponent}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n                  <Tab.Screen name=\"CustomerPageTwo\" component={CustomerPageTwo}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n                  <Tab.Screen name=\"CustomerRewards\" component={CustomerRewardsComponent}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n                  <Tab.Screen name=\"Praductia\" component={PraductiaFunc}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n                  <Tab.Screen name=\"EditPhoneNumber\" component={EditPhoneNumberComponent}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n                  <Tab.Screen name=\"EditPhoneNumberConfirm\" component={EditPhoneNumberConfirm}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n\r\n                  <Tab.Screen name=\"EditPasswordCustomer\" component={EditPasswordCustomerCompnent}\r\n                    options={({ route }) => ({\r\n                      tabBarButton: () => null,\r\n                      tabBarStyle: { display: 'none' }\r\n                    })}\r\n                  />\r\n                </Tab.Navigator>\r\n              ) :\r\n\r\n                // Guest pages tabs\r\n\r\n                loginState.userToken == null ? (\r\n                  <Tab.Navigator\r\n                    initialRouteName=\"GhostPage\"\r\n                    screenOptions={({ route }) => ({\r\n                      tabBarShowLabel: false,\r\n                      headerShown: false,\r\n                      tabBarActiveTintColor: '#2EB6A5',\r\n                      tabBarInactiveTintColor: 'gray',\r\n                      tabBarStyle: tabBarStyle,\r\n\r\n                    })}\r\n                  >\r\n                    <Tab.Screen name=\"GhostPage\" component={GhostPageComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"Login\" component={LoginScreenComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"ConfirmTelScreen\" component={ConfirmTelScreenFunction}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"RegisteredScreen\" component={RegisteredScreenComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"RegisteredUserScreen\" component={RegistrationUserScreenComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"RegistrationManufacturer\" component={RegistrationManufacturerComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"AuthScreen\" component={AuthScreenComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"GhostPageTwo\" component={GhostPageTwoComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"ForgetPassword\" component={ForgetPasswordComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"ForgetPasswordTel\" component={ForgetPasswordTelComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"NewPassword\" component={NewPasswordComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                    <Tab.Screen name=\"Modal\" component={ModalComponent}\r\n                      options={({ route }) => ({\r\n                        tabBarButton: () => null,\r\n                        tabBarStyle: { display: 'none' }\r\n                      })}\r\n                    />\r\n                  </Tab.Navigator>\r\n                ) : <></>\r\n          }\r\n        </NavigationContainer>\r\n      </AuthContext.Provider>\r\n    );\r\n  }\r\n}"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;;;AAEA,SAASC,mBAAT,EAA8BC,4BAA9B,QAAkE,0BAAlE;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,mBAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT;AACA,OAAOC,oBAAP;AACA,OAAOC,yBAAP;AACA,OAAOC,+BAAP;AACA,OAAOC,iCAAP;AACA,OAAOC,yBAAP;AACA,OAAOC,yBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,uBAAP;AACA,OAAOC,0BAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,0BAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,+BAAP;AACA,OAAOC,4BAAP;AACA,OAAOC,gCAAP;AACA,OAAOC,uCAAP;AACA,OAAOC,4BAAP;;;;AAKA,IAAMC,GAAG,GAAGlC,wBAAwB,EAApC;;AAGA,SAASmC,UAAT,OAAoC;EAAA,IAAdC,UAAc,QAAdA,UAAc;EAClC,OACE,KAAC,mBAAD;IAAqB,UAAU,EAAEA;EAAjC,EADF;AAGD;;AAED,SAASC,WAAT,QAAqC;EAAA,IAAdD,UAAc,SAAdA,UAAc;EACnC,OACE,KAAC,oBAAD;IAAsB,UAAU,EAAEA;EAAlC,EADF;AAGD;;AAGD,SAASE,gBAAT,QAA0C;EAAA,IAAdF,UAAc,SAAdA,UAAc;EACxC,OACE,KAAC,yBAAD;IAA2B,UAAU,EAAEA;EAAvC,EADF;AAGD;;AAGD,SAASG,sBAAT,QAAgD;EAAA,IAAdH,UAAc,SAAdA,UAAc;EAC9C,OACE,KAAC,+BAAD;IAAiC,UAAU,EAAEA;EAA7C,EADF;AAGD;;AAED,SAASI,wBAAT,QAAkD;EAAA,IAAdJ,UAAc,SAAdA,UAAc;EAChD,OACE,KAAC,iCAAD;IAAmC,UAAU,EAAEA;EAA/C,EADF;AAGD;;AAGD,SAASK,wBAAT,QAAyD;EAAA,IAArBC,KAAqB,SAArBA,KAAqB;EAAA,IAAdN,UAAc,SAAdA,UAAc;EAEvD,IAAQO,MAAR,GAAmBD,KAAK,CAACC,MAAzB,CAAQA,MAAR;EAEA,OACE,KAAC,yBAAD;IAA2B,KAAK,EAAEA,MAAlC;IAA0C,UAAU,EAAEP;EAAtD,EADF;AAID;;AAED,SAASQ,gBAAT,QAA0C;EAAA,IAAdR,UAAc,SAAdA,UAAc;EACxC,OACE,KAAC,yBAAD;IAA2B,UAAU,EAAEA;EAAvC,EADF;AAGD;;AAED,SAASS,SAAT,QAAmC;EAAA,IAAdT,UAAc,SAAdA,UAAc;EACjC,OACE,KAAC,kBAAD;IAAoB,UAAU,EAAEA;EAAhC,EADF;AAGD;;AAED,SAASU,YAAT,QAAsC;EAAA,IAAdV,UAAc,SAAdA,UAAc;EACpC,OACE,KAAC,qBAAD;IAAuB,UAAU,EAAEA;EAAnC,EADF;AAGD;;AACD,SAASW,eAAT,SAAyC;EAAA,IAAdX,UAAc,UAAdA,UAAc;EACvC,OACE,KAAC,wBAAD;IAA0B,UAAU,EAAEA;EAAtC,EADF;AAGD;;AACD,SAASY,sBAAT,SAAuD;EAAA,IAArBN,KAAqB,UAArBA,KAAqB;EAAA,IAAdN,UAAc,UAAdA,UAAc;EAErD,IAAQO,MAAR,GAAmBD,KAAK,CAACC,MAAzB,CAAQA,MAAR;EAEA,OACE,KAAC,8BAAD;IAAgC,SAAS,EAAEA,MAA3C;IAAmD,UAAU,EAAEP;EAA/D,EADF;AAGD;;AAED,SAASa,uBAAT,SAAiD;EAAA,IAAdb,UAAc,UAAdA,UAAc;EAC/C,OACE,KAAC,gCAAD;IAAkC,UAAU,EAAEA;EAA9C,EADF;AAGD;;AAED,SAASc,8BAAT,SAA+D;EAAA,IAArBR,KAAqB,UAArBA,KAAqB;EAAA,IAAdN,UAAc,UAAdA,UAAc;EAE7D,IAAQO,MAAR,GAAmBD,KAAK,CAACC,MAAzB,CAAQA,MAAR;EAEA,OACE,KAAC,uCAAD;IAAyC,SAAS,EAAEA,MAApD;IAA4D,UAAU,EAAEP;EAAxE,EADF;AAGD;;AAED,SAASe,oBAAT,SAA8C;EAAA,IAAdf,UAAc,UAAdA,UAAc;EAC5C,OACE,KAAC,4BAAD;IAA8B,UAAU,EAAEA;EAA1C,EADF;AAGD;;AAED,SAASgB,YAAT,SAAsC;EAAA,IAAdhB,UAAc,UAAdA,UAAc;EACpC,OACE,KAAC,qBAAD;IAAuB,UAAU,EAAEA;EAAnC,EADF;AAGD;;AACD,SAASiB,eAAT,SAAgD;EAAA,IAArBX,KAAqB,UAArBA,KAAqB;EAAA,IAAdN,UAAc,UAAdA,UAAc;EAE9C,IAAQO,MAAR,GAAmBD,KAAK,CAACC,MAAzB,CAAQA,MAAR;EAEA,OACE,KAAC,wBAAD;IAA0B,OAAO,EAAEA,MAAnC;IAA2C,UAAU,EAAEP;EAAvD,EADF;AAGD;;AAED,SAASkB,eAAT,SAAgD;EAAA,IAArBZ,KAAqB,UAArBA,KAAqB;EAAA,IAAdN,UAAc,UAAdA,UAAc;EAG9C,IAAQO,MAAR,GAAmBD,KAAK,CAACC,MAAzB,CAAQA,MAAR;EAEA,OACE,KAAC,wBAAD;IAA0B,MAAM,EAAEA,MAAlC;IAA0C,UAAU,EAAEP;EAAtD,EADF;AAGD;;AAGD,SAASmB,cAAT,SAAwC;EAAA,IAAdnB,UAAc,UAAdA,UAAc;EACtC,OACE,KAAC,uBAAD;IAAyB,UAAU,EAAEA;EAArC,EADF;AAGD;;AACD,SAASoB,iBAAT,SAA2C;EAAA,IAAdpB,UAAc,UAAdA,UAAc;EACzC,OACE,KAAC,0BAAD;IAA4B,UAAU,EAAEA;EAAxC,EADF;AAGD;;AAED,SAASqB,WAAT,SAAqC;EAAA,IAAdrB,UAAc,UAAdA,UAAc;EACnC,OACE,KAAC,oBAAD;IAAsB,UAAU,EAAEA;EAAlC,EADF;AAGD;;AAID,SAASsB,eAAT,SAAyC;EAAA,IAAdtB,UAAc,UAAdA,UAAc;EACvC,OACE,KAAC,wBAAD;IAA0B,UAAU,EAAEA;EAAtC,EADF;AAGD;;AAED,SAASuB,SAAT,SAAmC;EAAA,IAAdvB,UAAc,UAAdA,UAAc;EACjC,OACE,KAAC,kBAAD;IAAoB,UAAU,EAAEA;EAAhC,EADF;AAGD;;AAED,SAASwB,aAAT,SAAuC;EAAA,IAAdxB,UAAc,UAAdA,UAAc;EACrC,OACE,KAAC,sBAAD;IAAwB,UAAU,EAAEA;EAApC,EADF;AAGD;;AAED,SAASyB,eAAT,SAAyC;EAAA,IAAdzB,UAAc,UAAdA,UAAc;EACvC,OACE,KAAC,wBAAD;IAA0B,UAAU,EAAEA;EAAtC,EADF;AAGD;;AAED,SAAS0B,eAAT,SAAyC;EAAA,IAAd1B,UAAc,UAAdA,UAAc;EACvC,OACE,KAAC,wBAAD;IAA0B,UAAU,EAAEA;EAAtC,EADF;AAGD;;AAED,SAAS2B,iBAAT,SAA2C;EAAA,IAAd3B,UAAc,UAAdA,UAAc;EACzC,OACE,KAAC,0BAAD;IAA4B,UAAU,EAAEA;EAAxC,EADF;AAGD;;AAED,SAAS4B,aAAT,SAAuC;EAAA,IAAd5B,UAAc,UAAdA,UAAc;EACrC,OACE,KAAC,sBAAD;IAAwB,UAAU,EAAEA;EAApC,EADF;AAGD;;AAED,SAAS6B,aAAT,SAA8C;EAAA,IAArBvB,KAAqB,UAArBA,KAAqB;EAAA,IAAdN,UAAc,UAAdA,UAAc;EAE5C,IAAQO,MAAR,GAAmBD,KAAK,CAACC,MAAzB,CAAQA,MAAR;EAEA,OACE,KAAC,kBAAD;IAAoB,EAAE,EAAEA,MAAxB;IAAgC,UAAU,EAAEP;EAA5C,EADF;AAGD;;AAED,SAAS8B,gBAAT,SAAiD;EAAA,IAArBxB,KAAqB,UAArBA,KAAqB;EAAA,IAAdN,UAAc,UAAdA,UAAc;EAE/C,IAAQO,MAAR,GAAmBD,KAAK,CAACC,MAAzB,CAAQA,MAAR;EAEA,OACE,KAAC,mBAAD;IAAqB,EAAE,EAAEA,MAAzB;IAAiC,UAAU,EAAEP;EAA7C,EADF;AAGD;;AAED,SAAS+B,KAAT,SAA+B;EAAA,IAAd/B,UAAc,UAAdA,UAAc;EAC7B,OACE,KAAC,cAAD;IAAgB,UAAU,EAAEA;EAA5B,EADF;AAGD;;AAGD,IAAMgC,WAAW,GAAG;EAClBC,MAAM,EAAE,EADU;EAElBC,eAAe,EAAE,OAFC;EAGlBC,SAAS,EAAE,CAHO;EAIlBC,cAAc,EAAE,OAJE;EAKlBC,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,EALtB;EAMlBG,SAAS,EAAE,CANO;EAOlBC,WAAW,EAAE,MAPK;EAQlBC,YAAY,EAAE,CARI;EASlBC,UAAU,EAAE;AATM,CAApB;AAmBA,eAAe,SAASC,GAAT,GAAe;EAE5B,sBAAkCnF,KAAK,CAACoF,QAAN,CAAe,IAAf,CAAlC;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,YAAlB;;EACA,uBAAkCtF,KAAK,CAACoF,QAAN,CAAe,IAAf,CAAlC;EAAA;EAAA,IAAOG,SAAP;EAAA,IAAkBC,YAAlB;;EACA,uBAAgCxF,KAAK,CAACoF,QAAN,CAAe,IAAf,CAAhC;EAAA;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;;EAGA,IAAMC,iBAAiB,GAAG;IACxBN,SAAS,EAAE,IADa;IAExBE,SAAS,EAAE,IAFa;IAGxBE,QAAQ,EAAE;EAHc,CAA1B;;EAQA,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAYC,MAAZ,EAAuB;IAC1C,QAAQA,MAAM,CAACC,IAAf;MACE,KAAK,gBAAL;QACE,uCACKF,SADL;UAEEN,SAAS,EAAEO,MAAM,CAACP,SAFpB;UAGEE,QAAQ,EAAEK,MAAM,CAACL,QAHnB;UAKEJ,SAAS,EAAE;QALb;;MAOF,KAAK,OAAL;QACE,uCACKQ,SADL;UAEEN,SAAS,EAAEO,MAAM,CAACP,SAFpB;UAGEE,QAAQ,EAAEK,MAAM,CAACL,QAHnB;UAIEJ,SAAS,EAAE;QAJb;;MAMF,KAAK,QAAL;QACE,uCACKQ,SADL;UAEEN,SAAS,EAAE,IAFb;UAGEE,QAAQ,EAAE,IAHZ;UAIEJ,SAAS,EAAE;QAJb;;MAMF,KAAK,UAAL;QACE,uCACKQ,SADL;UAEEN,SAAS,EAAEO,MAAM,CAACP,SAFpB;UAGEE,QAAQ,EAAEK,MAAM,CAACL,QAHnB;UAIEJ,SAAS,EAAE;QAJb;IAxBJ;EA+BD,CAhCD;;EAkCA,wBAA+BrF,KAAK,CAACgG,UAAN,CAAiBJ,YAAjB,EAA+BD,iBAA/B,CAA/B;EAAA;EAAA,IAAOM,UAAP;EAAA,IAAmBC,QAAnB;;EAEA,IAAMC,WAAW,GAAGnG,KAAK,CAACoG,OAAN,CAAc;IAAA,OAAO;MACvCC,MAAM;QAAA,gCAAE,WAAOC,SAAP,EAAqB;UAE3B,IAAMf,SAAS,GAAGgB,MAAM,CAACD,SAAS,CAACf,SAAX,CAAxB;UACA,IAAME,QAAQ,GAAGc,MAAM,CAACD,SAAS,CAACb,QAAX,CAAvB;;UAEA,IAAI;YACF,MAAMpF,YAAY,CAACmG,OAAb,CAAqB,WAArB,EAAkCjB,SAAlC,CAAN;YACA,MAAMlF,YAAY,CAACmG,OAAb,CAAqB,UAArB,EAAiCf,QAAjC,CAAN;YAEAgB,OAAO,CAACC,GAAR,CAAYnB,SAAZ,EAAuB,0BAAvB;YACAkB,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EAAsB,yBAAtB;UAED,CAPD,CAOE,OAAOkB,CAAP,EAAU;YACVF,OAAO,CAACC,GAAR,CAAYC,CAAZ;UACD;;UACDT,QAAQ,CAAC;YAAEH,IAAI,EAAE,OAAR;YAAiBR,SAAS,EAAEA,SAA5B;YAAuCE,QAAQ,EAAEA;UAAjD,CAAD,CAAR;QAED,CAjBK;;QAAA;UAAA;QAAA;;QAAA;MAAA,GADiC;MAmBvCmB,OAAO;QAAA,iCAAE,WAAOC,QAAP,EAAoB;UAC3B,IAAI;YACF,MAAMxG,YAAY,CAACyG,UAAb,CAAwB,WAAxB,CAAN;YACA,MAAMzG,YAAY,CAACyG,UAAb,CAAwB,UAAxB,CAAN;YAEAxB,YAAY,CAAC,KAAD,CAAZ;UAED,CAND,CAME,OAAOqB,CAAP,EAAU;YACVF,OAAO,CAACC,GAAR,CAAYC,CAAZ;UACD;;UACDT,QAAQ,CAAC;YAAEH,IAAI,EAAE;UAAR,CAAD,CAAR;UACAc,QAAQ;QACT,CAZM;;QAAA;UAAA;QAAA;;QAAA;MAAA,GAnBgC;MAgCvCE,MAAM,EAAE,kBAAM,CAEb;IAlCsC,CAAP;EAAA,CAAd,EAmChB,EAnCgB,CAApB;EAwCA/G,KAAK,CAACgH,SAAN,CAAgB,YAAM;IACpBC,UAAU,mBAAC,aAAY;MAErB,IAAI1B,SAAJ;MACA,IAAIE,QAAJ;MAEAF,SAAS,GAAG,IAAZ;MACAE,QAAQ,GAAG,IAAX;;MAEA,IAAI;QAIFF,SAAS,SAASlF,YAAY,CAAC6G,OAAb,CAAqB,WAArB,CAAlB;QACAzB,QAAQ,SAASpF,YAAY,CAAC6G,OAAb,CAAqB,UAArB,CAAjB;QAEAT,OAAO,CAACC,GAAR,CAAYnB,SAAZ,EAAuB,WAAvB;QACAkB,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EAAsB,UAAtB;QAEAH,YAAY,CAAC,KAAD,CAAZ;QACAmB,OAAO,CAACC,GAAR,CAAY,MAAZ;MAED,CAbD,CAaE,OAAOC,CAAP,EAAU;QACVF,OAAO,CAACC,GAAR,CAAYC,CAAZ;MACD;;MACDT,QAAQ,CAAC;QAAEH,IAAI,EAAE,gBAAR;QAA0BR,SAAS,EAAEA,SAArC;QAAgDE,QAAQ,EAAEA;MAA1D,CAAD,CAAR;IACD,CAzBS,GAyBP,IAzBO,CAAV;EA0BD,CA3BD,EA2BG,EA3BH;;EA8BA,IAAIJ,SAAJ,EAAe;IACb,OACE,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEZ,eAAe,EAAE,MAAnB;QAA2B0C,IAAI,EAAE,CAAjC;QAAoCC,cAAc,EAAE,QAApD;QAA8DC,UAAU,EAAE;MAA1E,CAAb;MAAA,UACE,KAAC,iBAAD;QAAmB,IAAI,EAAE,GAAzB;QAA8B,KAAK,EAAC;MAApC;IADF,EADF;EAKD,CAND,MAMO;IAEL,OAEE,MAAC,WAAD,CAAa,QAAb;MAAsB,KAAK,EAAElB,WAA7B;MAAA,WAEE,KAAC,SAAD;QACE,QAAQ,EAAE,IADZ;QAEE,MAAM,EAAE,KAFV;QAGE,eAAe,EAAC,OAHlB;QAIE,QAAQ,EAAC;MAJX,EAFF,EAQE,KAAC,mBAAD;QAAA,UAIIF,UAAU,CAACV,SAAX,KAAyB,IAAzB,IAAiCU,UAAU,CAACR,QAAX,IAAuB,GAAxD,GACE,MAAC,GAAD,CAAK,SAAL;UACE,gBAAgB,EAAC,cADnB;UAEE,aAAa,EAAE;YAAA,IAAG5C,KAAH,UAAGA,KAAH;YAAA,OAAgB;cAC7ByE,eAAe,EAAE,KADY;cAE7BC,WAAW,EAAE,KAFgB;cAG7BC,qBAAqB,EAAE,SAHM;cAI7BC,uBAAuB,EAAE,MAJI;cAK7BlD,WAAW,EAAEA;YALgB,CAAhB;UAAA,CAFjB;UAAA,WAWE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,cAAjB;YAAgC,SAAS,EAAExD,qBAA3C;YACE,OAAO,EAAE;cAAA,IAAG8B,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAXF,EAkBE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,iBAAjB;YAAmC,SAAS,EAAErG,wBAA9C;YACE,OAAO,EAAE;cAAA,IAAGuB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAlBF,EAwBE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,iBAAjB;YAAmC,SAAS,EAAEnE,eAA9C;YACE,OAAO,EAAE;cAAA,IAAGX,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAxBF,EA+BE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,eAAjB;YAAiC,SAAS,EAAEnG,sBAA5C;YACE,OAAO,EAAE;cAAA,IAAGqB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EA/BF,EAqCE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,WAAjB;YAA6B,SAAS,EAAEpG,kBAAxC;YACE,OAAO,EAAE;cAAA,IAAGsB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EArCF,EA2CE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,yBAAjB;YAA2C,SAAS,EAAEzF,gCAAtD;YACE,OAAO,EAAE;cAAA,IAAGW,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EA3CF,EAiDE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,gCAAjB;YAAkD,SAAS,EAAEtE,8BAA7D;YACE,OAAO,EAAE;cAAA,IAAGR,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAjDF,EAuDG,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,sBAAjB;YAAwC,SAAS,EAAEvF,4BAAnD;YACG,OAAO,EAAE;cAAA,IAAGS,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADZ,EAvDH;QAAA,EADF,GAoEE1B,UAAU,CAACV,SAAX,KAAyB,IAAzB,IAAiCU,UAAU,CAACR,QAAX,IAAuB,GAAxD,GACE,MAAC,GAAD,CAAK,SAAL;UACE,gBAAgB,EAAC,kBADnB;UAEE,aAAa,EAAE;YAAA,IAAG5C,KAAH,UAAGA,KAAH;YAAA,OAAgB;cAC7ByE,eAAe,EAAE,KADY;cAE7BC,WAAW,EAAE,KAFgB;cAG7BC,qBAAqB,EAAE,SAHM;cAI7BC,uBAAuB,EAAE,MAJI;cAK7BlD,WAAW,EAAEA;YALgB,CAAhB;UAAA,CAFjB;UAAA,WAWE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,kBAAjB;YAAoC,SAAS,EAAE3D,yBAA/C;YACE,OAAO,EAAE;cAAA,IAAGiC,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAXF,EAiBE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,YAAjB;YAA8B,SAAS,EAAEtD,gBAAzC;YACE,OAAO,EAAE;cAAA,IAAGxB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAjBF,EAuBE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,eAAjB;YAAiC,SAAS,EAAE/F,sBAA5C;YACE,OAAO,EAAE;cAAA,IAAGiB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAvBF,EA8BE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,mBAAjB;YAAqC,SAAS,EAAEhG,0BAAhD;YACE,OAAO,EAAE;cAAA,IAAGkB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EA9BF,EAoCE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,iBAAjB;YAAmC,SAAS,EAAElG,wBAA9C;YACE,OAAO,EAAE;cAAA,IAAGoB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EApCF,EA0CE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,iBAAjB;YAAmC,SAAS,EAAElE,eAA9C;YACE,OAAO,EAAE;cAAA,IAAGZ,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EA1CF,EAgDE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,iBAAjB;YAAmC,SAAS,EAAEjG,wBAA9C;YACE,OAAO,EAAE;cAAA,IAAGmB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAhDF,EAsDE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,WAAjB;YAA6B,SAAS,EAAEvD,aAAxC;YACE,OAAO,EAAE;cAAA,IAAGvB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAtDF,EA4DE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,iBAAjB;YAAmC,SAAS,EAAE3G,wBAA9C;YACE,OAAO,EAAE;cAAA,IAAG6B,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EA5DF,EAkEE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,wBAAjB;YAA0C,SAAS,EAAExE,sBAArD;YACE,OAAO,EAAE;cAAA,IAAGN,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAlEF,EAyEE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,sBAAjB;YAAwC,SAAS,EAAE1F,4BAAnD;YACE,OAAO,EAAE;cAAA,IAAGY,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAzEF;QAAA,EADF,GAqFE1B,UAAU,CAACV,SAAX,IAAwB,IAAxB,GACE,MAAC,GAAD,CAAK,SAAL;UACE,gBAAgB,EAAC,WADnB;UAEE,aAAa,EAAE;YAAA,IAAG1C,KAAH,UAAGA,KAAH;YAAA,OAAgB;cAC7ByE,eAAe,EAAE,KADY;cAE7BC,WAAW,EAAE,KAFgB;cAG7BC,qBAAqB,EAAE,SAHM;cAI7BC,uBAAuB,EAAE,MAJI;cAK7BlD,WAAW,EAAEA;YALgB,CAAhB;UAAA,CAFjB;UAAA,WAWE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,WAAjB;YAA6B,SAAS,EAAE1D,kBAAxC;YACE,OAAO,EAAE;cAAA,IAAGgC,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAXF,EAiBE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,OAAjB;YAAyB,SAAS,EAAEpH,oBAApC;YACE,OAAO,EAAE;cAAA,IAAGsC,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAjBF,EAuBE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,kBAAjB;YAAoC,SAAS,EAAE/E,wBAA/C;YACE,OAAO,EAAE;cAAA,IAAGC,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAvBF,EA6BE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,kBAAjB;YAAoC,SAAS,EAAEnH,yBAA/C;YACE,OAAO,EAAE;cAAA,IAAGqC,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EA7BF,EAmCE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,sBAAjB;YAAwC,SAAS,EAAElH,+BAAnD;YACE,OAAO,EAAE;cAAA,IAAGoC,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAnCF,EAyCE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,0BAAjB;YAA4C,SAAS,EAAEjH,iCAAvD;YACE,OAAO,EAAE;cAAA,IAAGmC,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAzCF,EA+CE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,YAAjB;YAA8B,SAAS,EAAEvH,mBAAzC;YACE,OAAO,EAAE;cAAA,IAAGyC,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EA/CF,EAqDE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,cAAjB;YAAgC,SAAS,EAAE7G,qBAA3C;YACE,OAAO,EAAE;cAAA,IAAG+B,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EArDF,EA2DE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,gBAAjB;YAAkC,SAAS,EAAExG,uBAA7C;YACE,OAAO,EAAE;cAAA,IAAG0B,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EA3DF,EAiEE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,mBAAjB;YAAqC,SAAS,EAAEvG,0BAAhD;YACE,OAAO,EAAE;cAAA,IAAGyB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAjEF,EAuEE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,aAAjB;YAA+B,SAAS,EAAEtG,oBAA1C;YACE,OAAO,EAAE;cAAA,IAAGwB,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EAvEF,EA6EE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,OAAjB;YAAyB,SAAS,EAAE5F,cAApC;YACE,OAAO,EAAE;cAAA,IAAGc,KAAH,UAAGA,KAAH;cAAA,OAAgB;gBACvB6E,YAAY,EAAE;kBAAA,OAAM,IAAN;gBAAA,CADS;gBAEvBnD,WAAW,EAAE;kBAAEoD,OAAO,EAAE;gBAAX;cAFU,CAAhB;YAAA;UADX,EA7EF;QAAA,EADF,GAqFI;MAlPZ,EARF;IAAA,EAFF;EAiQD;AACF"},"metadata":{},"sourceType":"module"}