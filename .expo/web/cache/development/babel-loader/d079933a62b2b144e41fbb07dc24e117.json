{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Svg, { Path, Rect, Line } from \"react-native-svg\";\nimport DesignerPageNavComponent from \"./DesignerPageNav\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DesignerMyBroniComponent = function (_Component) {\n  _inherits(DesignerMyBroniComponent, _Component);\n\n  var _super = _createSuper(DesignerMyBroniComponent);\n\n  function DesignerMyBroniComponent(props) {\n    var _this;\n\n    _classCallCheck(this, DesignerMyBroniComponent);\n\n    _this = _super.call(this, props);\n\n    _this.enterCheckBox = function (id) {\n      var filterSort = _this.state.filterSortBy;\n      var find = false;\n      filterSort.find(function (item) {\n        if (item == id) {\n          find = true;\n        }\n      });\n\n      if (find) {\n        var index = filterSort.indexOf(id);\n        filterSort.splice(index, 1);\n      } else {\n        filterSort.push(id);\n      }\n\n      _this.setState({\n        filterSortBy: filterSort\n      });\n    };\n\n    _this.verifyCheckBox = function (id) {\n      var filterSort = _this.state.filterSortBy;\n      var find = false;\n      filterSort.find(function (item) {\n        if (item == id) {\n          find = true;\n        }\n      });\n      return find;\n    };\n\n    _this.state = {\n      filterSortBy: [],\n      broni: [{\n        id: 1,\n        date: '01.02.22',\n        categir: 'Кухонная мебель',\n        stranaa: 'г. Москва',\n        data: [{\n          name: 'Алексей Петров',\n          number: '+7(909)099-99-99'\n        }, {\n          name: 'Ирина Петрова',\n          number: '+7(808)088-88-88'\n        }],\n        comp: [{\n          name: 'Лайт кухни',\n          rubli: '250.000Руб',\n          procent: '10 %'\n        }, {\n          name: 'mr. DOORS',\n          rubli: '300.000Руб',\n          procent: '10 %'\n        }]\n      }, {\n        id: 2,\n        date: '01.02.22',\n        categir: 'Кухонная мебель',\n        stranaa: 'г. Москва',\n        data: [{\n          name: 'Алексей Петров',\n          number: '+7(909)099-99-99'\n        }, {\n          name: 'Ирина Петрова',\n          number: '+7(808)088-88-88'\n        }],\n        comp: [{\n          name: 'Лайт кухни',\n          rubli: '250.000Руб',\n          procent: '10 %'\n        }, {\n          name: 'mr. DOORS',\n          rubli: '300.000Руб',\n          procent: '10 %'\n        }]\n      }, {\n        id: 3,\n        date: '01.02.22',\n        categir: 'Кухонная мебель',\n        stranaa: 'г. Москва',\n        data: [{\n          name: 'Алексей Петров',\n          number: '+7(909)099-99-99'\n        }, {\n          name: 'Ирина Петрова',\n          number: '+7(808)088-88-88'\n        }],\n        comp: [{\n          name: 'Лайт кухни',\n          rubli: '250.000Руб',\n          procent: '10 %'\n        }, {\n          name: 'mr. DOORS',\n          rubli: '300.000Руб',\n          procent: '10 %'\n        }]\n      }, {\n        id: 4,\n        date: '01.02.22',\n        categir: 'Кухонная мебель',\n        stranaa: 'г. Москва',\n        data: [{\n          name: 'Алексей Петров',\n          number: '+7(909)099-99-99'\n        }, {\n          name: 'Ирина Петрова',\n          number: '+7(808)088-88-88'\n        }],\n        comp: [{\n          name: 'Лайт кухни',\n          rubli: '250.000Руб',\n          procent: '10 %'\n        }, {\n          name: 'mr. DOORS',\n          rubli: '300.000Руб',\n          procent: '10 %'\n        }]\n      }, {\n        id: 5,\n        date: '01.02.22',\n        categir: 'Кухонная мебель',\n        stranaa: 'г. Москва',\n        data: [{\n          name: 'Алексей Петров',\n          number: '+7(909)099-99-99'\n        }, {\n          name: 'Ирина Петрова',\n          number: '+7(808)088-88-88'\n        }],\n        comp: [{\n          name: 'Лайт кухни',\n          rubli: '250.000Руб',\n          procent: '10 %'\n        }, {\n          name: 'mr. DOORS',\n          rubli: '300.000Руб',\n          procent: '10 %'\n        }]\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(DesignerMyBroniComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        children: [_jsxs(View, {\n          style: styles.main,\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 24,\n              fontFamily: 'Poppins_500Medium',\n              color: '#1571F0',\n              marginVertical: 11\n            },\n            children: \"\\u041C\\u043E\\u0438 \\u0411\\u0440\\u043E\\u043D\\u0438\"\n          }), _jsx(ScrollView, {\n            showsVerticalScrollIndicator: false,\n            children: this.state.broni.map(function (item, index) {\n              return _jsxs(View, {\n                style: styles.sortMain,\n                children: [_jsxs(View, {\n                  style: styles.sorts,\n                  children: [_jsxs(View, {\n                    style: {\n                      flexDirection: 'row'\n                    },\n                    children: [_jsx(Text, {\n                      style: {\n                        fontSize: 25,\n                        fontFamily: 'Poppins_500Medium',\n                        marginRight: 14,\n                        color: '#1571F0'\n                      },\n                      children: item.id\n                    }), _jsx(Text, {\n                      style: {\n                        marginTop: 4,\n                        fontSize: 20,\n                        color: '#C4C4C4',\n                        fontFamily: 'Poppins_300Light'\n                      },\n                      children: item.date\n                    })]\n                  }), _jsx(View, {\n                    style: styles.checkBox,\n                    children: _jsx(TouchableOpacity, {\n                      style: {\n                        flexDirection: 'row',\n                        alignItems: 'center'\n                      },\n                      onPress: function onPress() {\n                        _this2.enterCheckBox(item.id);\n                      },\n                      children: _jsxs(View, {\n                        children: [_this2.verifyCheckBox(item.id) === false && _jsx(Svg, {\n                          width: \"25\",\n                          height: \"25\",\n                          viewBox: \"0 0 25 25\",\n                          fill: \"none\",\n                          xmlns: \"http://www.w3.org/2000/svg\",\n                          children: _jsx(Rect, {\n                            x: \"0.5\",\n                            y: \"0.5\",\n                            width: \"24\",\n                            height: \"24\",\n                            rx: \"3.5\",\n                            stroke: \"#E5E5E5\"\n                          })\n                        }), _this2.verifyCheckBox(item.id) === true && _jsxs(Svg, {\n                          width: \"25\",\n                          height: \"25\",\n                          viewBox: \"0 0 25 25\",\n                          fill: \"none\",\n                          xmlns: \"http://www.w3.org/2000/svg\",\n                          children: [_jsx(Path, {\n                            d: \"M5 14L9.41176 19L20 6\",\n                            stroke: \"#1571F0\",\n                            \"stroke-width\": \"2\",\n                            \"stroke-linecap\": \"round\",\n                            \"stroke-linejoin\": \"round\"\n                          }), _jsx(Rect, {\n                            x: \"0.5\",\n                            y: \"0.5\",\n                            width: \"24\",\n                            height: \"24\",\n                            rx: \"3.5\",\n                            stroke: \"#E5E5E5\"\n                          })]\n                        })]\n                      })\n                    }, index)\n                  }, item.id)]\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    marginBottom: 2\n                  },\n                  children: [_jsx(Text, {\n                    style: {\n                      fontSize: 12,\n                      fontFamily: 'Poppins_500Medium'\n                    },\n                    children: item.categir\n                  }), _jsx(Text, {\n                    style: {\n                      fontSize: 12,\n                      fontFamily: 'Poppins_500Medium'\n                    },\n                    children: item.stranaa\n                  })]\n                }), item.data.map(function (res, index) {\n                  return _jsxs(View, {\n                    style: {\n                      flexDirection: 'row',\n                      justifyContent: 'space-between',\n                      alignItems: 'center'\n                    },\n                    children: [_jsx(Text, {\n                      style: {\n                        fontSize: 18,\n                        fontFamily: 'Poppins_400Regular'\n                      },\n                      children: res.name\n                    }), _jsx(Text, {\n                      style: {\n                        fontSize: 14,\n                        fontFamily: 'Poppins_300Light'\n                      },\n                      children: res.number\n                    })]\n                  }, index);\n                }), _jsx(View, {\n                  style: {\n                    width: '100%',\n                    borderWidth: 1,\n                    borderColor: '#EBEBEB',\n                    marginVertical: 5\n                  }\n                }), item.comp.map(function (res, index) {\n                  return _jsxs(View, {\n                    style: {\n                      flexDirection: 'row',\n                      justifyContent: 'space-between',\n                      marginBottom: 3,\n                      alignItems: 'center'\n                    },\n                    children: [_jsxs(View, {\n                      style: {\n                        flexDirection: 'row'\n                      },\n                      children: [_jsx(TouchableOpacity, {\n                        style: {\n                          marginTop: 3\n                        },\n                        children: _jsxs(Svg, {\n                          width: \"21\",\n                          height: \"21\",\n                          viewBox: \"0 0 21 21\",\n                          fill: \"none\",\n                          xmlns: \"http://www.w3.org/2000/svg\",\n                          children: [_jsx(Line, {\n                            x1: \"10.5\",\n                            y1: \"5.5\",\n                            x2: \"10.5\",\n                            y2: \"15.5\",\n                            stroke: \"#333333\",\n                            \"stroke-linecap\": \"round\"\n                          }), _jsx(Line, {\n                            x1: \"15.5\",\n                            y1: \"10.5\",\n                            x2: \"5.5\",\n                            y2: \"10.5\",\n                            stroke: \"#333333\",\n                            \"stroke-linecap\": \"round\"\n                          }), _jsx(Rect, {\n                            x: \"0.5\",\n                            y: \"0.5\",\n                            width: \"20\",\n                            height: \"20\",\n                            rx: \"3.5\",\n                            stroke: \"#E5E5E5\"\n                          })]\n                        })\n                      }), _jsx(Text, {\n                        style: {\n                          fontSize: 18,\n                          fontFamily: 'Poppins_600SemiBold',\n                          marginLeft: 6\n                        },\n                        children: res.name\n                      })]\n                    }), _jsx(Text, {\n                      style: {\n                        fontSize: 17,\n                        fontFamily: 'Poppins_300Light'\n                      },\n                      children: res.rubli\n                    }), _jsx(Text, {\n                      style: {\n                        fontSize: 17,\n                        fontFamily: 'Poppins_500Medium',\n                        color: '#77ADF6'\n                      },\n                      children: res.procent\n                    })]\n                  }, index);\n                })]\n              }, index);\n            })\n          })]\n        }), _jsx(DesignerPageNavComponent, {\n          active_page: 'Брони',\n          navigation: this.props.navigation\n        })]\n      });\n    }\n  }]);\n\n  return DesignerMyBroniComponent;\n}(Component);\n\nexport { DesignerMyBroniComponent as default };\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: 15\n  },\n  sortMain: {\n    width: '100%',\n    borderWidth: 3,\n    marginBottom: 15,\n    borderColor: '#E5E5E5',\n    borderRadius: 10,\n    padding: 10\n  },\n  sorts: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"names":["React","Component","Svg","Path","Rect","Line","DesignerPageNavComponent","DesignerMyBroniComponent","props","enterCheckBox","id","filterSort","state","filterSortBy","find","item","index","indexOf","splice","push","setState","verifyCheckBox","broni","date","categir","stranaa","data","name","number","comp","rubli","procent","flex","styles","main","fontSize","fontFamily","color","marginVertical","map","sortMain","sorts","flexDirection","marginRight","marginTop","checkBox","alignItems","justifyContent","marginBottom","res","width","borderWidth","borderColor","marginLeft","navigation","StyleSheet","create","backgroundColor","paddingHorizontal","borderRadius","padding"],"sources":["C:/Users/Hopar/Desktop/redect/RefectionApp/components/Designer/DesignerMyBroni.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, SafeAreaView, View, Image, Text, Touchable, TouchableOpacity, ScrollView } from \"react-native\";\r\nimport Svg, { Path, Rect, Line } from \"react-native-svg\";\r\nimport DesignerPageNavComponent from \"./DesignerPageNav\";\r\n\r\nexport default class DesignerMyBroniComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      filterSortBy: [],\r\n      broni: [\r\n        {\r\n          id: 1,\r\n          date: '01.02.22',\r\n          categir: 'Кухонная мебель',\r\n          stranaa: 'г. Москва',\r\n          data: [\r\n            { name: 'Алексей Петров', number: '+7(909)099-99-99' },\r\n            { name: 'Ирина Петрова', number: '+7(808)088-88-88' },\r\n          ],\r\n          comp: [\r\n            { name: 'Лайт кухни', rubli: '250.000Руб', procent: '10 %' },\r\n            { name: 'mr. DOORS', rubli: '300.000Руб', procent: '10 %' },\r\n          ]\r\n\r\n        },\r\n        {\r\n          id: 2,\r\n          date: '01.02.22',\r\n          categir: 'Кухонная мебель',\r\n          stranaa: 'г. Москва',\r\n          data: [\r\n            { name: 'Алексей Петров', number: '+7(909)099-99-99' },\r\n            { name: 'Ирина Петрова', number: '+7(808)088-88-88' },\r\n          ],\r\n          comp: [\r\n            { name: 'Лайт кухни', rubli: '250.000Руб', procent: '10 %' },\r\n            { name: 'mr. DOORS', rubli: '300.000Руб', procent: '10 %' },\r\n          ]\r\n\r\n        },\r\n        {\r\n          id: 3,\r\n          date: '01.02.22',\r\n          categir: 'Кухонная мебель',\r\n          stranaa: 'г. Москва',\r\n          data: [\r\n            { name: 'Алексей Петров', number: '+7(909)099-99-99' },\r\n            { name: 'Ирина Петрова', number: '+7(808)088-88-88' },\r\n          ],\r\n          comp: [\r\n            { name: 'Лайт кухни', rubli: '250.000Руб', procent: '10 %' },\r\n            { name: 'mr. DOORS', rubli: '300.000Руб', procent: '10 %' },\r\n          ]\r\n\r\n        },\r\n        {\r\n          id: 4,\r\n          date: '01.02.22',\r\n          categir: 'Кухонная мебель',\r\n          stranaa: 'г. Москва',\r\n          data: [\r\n            { name: 'Алексей Петров', number: '+7(909)099-99-99' },\r\n            { name: 'Ирина Петрова', number: '+7(808)088-88-88' },\r\n          ],\r\n          comp: [\r\n            { name: 'Лайт кухни', rubli: '250.000Руб', procent: '10 %' },\r\n            { name: 'mr. DOORS', rubli: '300.000Руб', procent: '10 %' },\r\n          ]\r\n\r\n        },\r\n        {\r\n          id: 5,\r\n          date: '01.02.22',\r\n          categir: 'Кухонная мебель',\r\n          stranaa: 'г. Москва',\r\n          data: [\r\n            { name: 'Алексей Петров', number: '+7(909)099-99-99' },\r\n            { name: 'Ирина Петрова', number: '+7(808)088-88-88' },\r\n          ],\r\n          comp: [\r\n            { name: 'Лайт кухни', rubli: '250.000Руб', procent: '10 %' },\r\n            { name: 'mr. DOORS', rubli: '300.000Руб', procent: '10 %' },\r\n          ]\r\n\r\n        },\r\n      ],\r\n\r\n      // data: [],\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // handleGetBrone = async () => {\r\n  //     let userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNjg5NTc2ZmE0NjAyM2QxMzQwYjU4OWY4NDNlM2Q2NDA2ZTVlMWViZGYyNGE2YWQxM2I3YzA5NGE5ZTUxYjFiMmZjZTc0NjQ5YWEyMjYwNzAiLCJpYXQiOjE2NjAxMzEzOTguMTY0ODYyLCJuYmYiOjE2NjAxMzEzOTguMTY0ODcsImV4cCI6MTY5MTY2NzM5OC4xNDM4MDIsInN1YiI6IjIiLCJzY29wZXMiOltdfQ.UT5Kyu9OW-uMoiytiEj0lpXst5KNZ9Gw3ylrtrjadAtu684zftmVUmf8t0Lo2icgB6_xNAy7TMIjHICJEuuQBtxXS-500gTEmv_SDvZbXI3RCDDgpzpJdXNdjjmHV5NjUyrzhOdMvJyGRQThQ4AwiKfCh5jS4_wxTHLk3GT0ySiyoU6D75689c2siamvyV6-Yy6peI8kDKHsQvUfpGIYQ30ChULAts1oWFms7UoIaE-YCCqa1JF3pSRzfjmNqhKYPXPJYj-6mtD8Rjzp79wELCzKM20eYNIVi70Bh8uA-GbZNb9ik-VkfTo_sE40BkTsl8EZh7DRvaIhjXnrN0aybCssnFTbzUgQ4lVg_k43RKUBUvAVDT2kmKiz4YEAeUeDYL50gK63HEfXbEg8KWVg2Hc4U3HczZI21RHm7h4Fbfwj0Vc8cB6hrro_j-OAGsBRXLHp2jMR-VbvuJzG9gCJc1dg8xtKHqdXxY1wNyUVhD7cH0w9bb2mBPHIvYge3GHsfuIvkPmTYK4Pmz8d1W1EAoY_yUDXOXB8sF1bKX0gqk62AO8EcATrOSvhkzEAw7ePsgFav75ABkY_weA-iIF2mkwB_rnUwwIaRNoEV_q2-0UEdFBf_BJ9F2JxYPFcvm_ehHElwKYd9M4x0roHj7NJMC_M6qUcxSOs86Az4FtuJNM'\r\n  //     let AuthStr = 'Bearer ' + userToken;\r\n  //     fetch('http://80.78.246.59/Refectio/public/api/GetMyBrone', {\r\n  //         method: 'GET',\r\n  //         headers: {\r\n  //             'Authorization': AuthStr,\r\n  //         },\r\n  //     }).then((response) => {\r\n  //         return response.json()\r\n  //     }).then((res) => {\r\n  //         // console.log(res, 'data')\r\n  //         let data = res.data.book.data\r\n  //         // console.log(data,'sd');\r\n  //         this.setState({\r\n  //             data: data\r\n  //         })\r\n\r\n  //     })\r\n  // }\r\n\r\n  enterCheckBox = (id) => {\r\n    let filterSort = this.state.filterSortBy;\r\n    let find = false\r\n    filterSort.find((item) => {\r\n      if (item == id) {\r\n        find = true\r\n      }\r\n    })\r\n\r\n    if (find) {\r\n      const index = filterSort.indexOf(id);\r\n      filterSort.splice(index, 1);\r\n    }\r\n    else {\r\n      filterSort.push(id)\r\n    }\r\n    this.setState({ filterSortBy: filterSort })\r\n  }\r\n\r\n  verifyCheckBox = (id) => {\r\n    let filterSort = this.state.filterSortBy\r\n    let find = false\r\n    filterSort.find((item) => {\r\n      if (item == id) {\r\n        find = true\r\n      }\r\n    })\r\n    return find\r\n  }\r\n\r\n\r\n  // componentDidMount() {\r\n  //     const { navigation } = this.props;\r\n  //     this.handleGetBrone()\r\n  //     this.focusListener = navigation.addListener(\"focus\", () => {\r\n  //         this.handleGetBrone()\r\n  //     });\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //     if (this.focusListener) {\r\n  //         this.focusListener();\r\n  //     }\r\n  // }\r\n\r\n  render() {\r\n    // {\r\n    //     this.state.data.map((res) => {\r\n    //         console.log(res.designer_name, 'res')\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n      <SafeAreaView style={{ flex: 1, }}>\r\n        <View style={styles.main}>\r\n          <Text\r\n            style={{\r\n              fontSize: 24,\r\n              fontFamily: 'Poppins_500Medium',\r\n              color: '#1571F0',\r\n              marginVertical: 11,\r\n            }}>\r\n            Мои Брони\r\n          </Text>\r\n          <ScrollView showsVerticalScrollIndicator={false}>\r\n            {this.state.broni.map((item, index) => {\r\n              return (\r\n                <View key={index} style={styles.sortMain}>\r\n                  <View style={styles.sorts}>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: 'row',\r\n                      }}>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 25,\r\n                          fontFamily: 'Poppins_500Medium',\r\n                          marginRight: 14,\r\n                          color: '#1571F0'\r\n                        }}>\r\n                        {item.id}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          marginTop: 4,\r\n                          fontSize: 20,\r\n                          color: '#C4C4C4',\r\n                          fontFamily: 'Poppins_300Light',\r\n                        }}>\r\n                        {item.date}\r\n                      </Text>\r\n                    </View>\r\n                    <View key={item.id} style={styles.checkBox}>\r\n                      <TouchableOpacity key={index} style={{ flexDirection: 'row', alignItems: 'center' }} onPress={() => {\r\n                        this.enterCheckBox(item.id)\r\n                      }}>\r\n                        <View >\r\n                          {this.verifyCheckBox(item.id) === false &&\r\n                            <Svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <Rect x=\"0.5\" y=\"0.5\" width=\"24\" height=\"24\" rx=\"3.5\" stroke=\"#E5E5E5\" />\r\n                            </Svg>\r\n                          }\r\n                          {this.verifyCheckBox(item.id) === true &&\r\n                            <Svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <Path d=\"M5 14L9.41176 19L20 6\" stroke=\"#1571F0\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                              <Rect x=\"0.5\" y=\"0.5\" width=\"24\" height=\"24\" rx=\"3.5\" stroke=\"#E5E5E5\" />\r\n                            </Svg>\r\n                          }\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: 'row',\r\n                      justifyContent: 'space-between',\r\n                      marginBottom: 2\r\n                    }}>\r\n                    <Text style={{\r\n                      fontSize: 12,\r\n                      fontFamily: 'Poppins_500Medium',\r\n                    }}>\r\n                      {item.categir}\r\n                    </Text>\r\n                    <Text style={{\r\n                      fontSize: 12,\r\n                      fontFamily: 'Poppins_500Medium',\r\n                    }}>\r\n                      {item.stranaa}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  {item.data.map((res, index) => {\r\n                    return (\r\n                      <View\r\n                        key={index}\r\n                        style={{\r\n                          flexDirection: 'row',\r\n                          justifyContent: 'space-between',\r\n                          alignItems: 'center',\r\n                        }}>\r\n                        <Text style={{\r\n                          fontSize: 18,\r\n                          fontFamily: 'Poppins_400Regular',\r\n                        }}>\r\n                          {res.name}\r\n                        </Text>\r\n                        <Text style={{\r\n                          fontSize: 14,\r\n                          fontFamily: 'Poppins_300Light',\r\n                        }}>\r\n                          {res.number}\r\n                        </Text>\r\n                      </View>\r\n                    )\r\n                  })}\r\n                  <View style={{ width: '100%', borderWidth: 1, borderColor: '#EBEBEB', marginVertical: 5 }}></View>\r\n                  {item.comp.map((res, index) => {\r\n                    return (\r\n                      <View\r\n                        key={index}\r\n                        style={{\r\n                          flexDirection: 'row',\r\n                          justifyContent: 'space-between',\r\n                          marginBottom: 3,\r\n                          alignItems: 'center',\r\n                        }}>\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                          <TouchableOpacity\r\n                            style={{\r\n                              marginTop: 3,\r\n                            }}>\r\n                            <Svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <Line x1=\"10.5\" y1=\"5.5\" x2=\"10.5\" y2=\"15.5\" stroke=\"#333333\" stroke-linecap=\"round\" />\r\n                              <Line x1=\"15.5\" y1=\"10.5\" x2=\"5.5\" y2=\"10.5\" stroke=\"#333333\" stroke-linecap=\"round\" />\r\n                              <Rect x=\"0.5\" y=\"0.5\" width=\"20\" height=\"20\" rx=\"3.5\" stroke=\"#E5E5E5\" />\r\n                            </Svg>\r\n                          </TouchableOpacity>\r\n                          <Text style={{\r\n                            fontSize: 18,\r\n                            fontFamily: 'Poppins_600SemiBold',\r\n                            marginLeft: 6,\r\n                          }}>\r\n                            {res.name}\r\n                          </Text>\r\n                        </View>\r\n                        <Text style={{\r\n                          fontSize: 17,\r\n                          fontFamily: 'Poppins_300Light',\r\n                        }}>\r\n                          {res.rubli}\r\n                        </Text>\r\n                        <Text style={{\r\n                          fontSize: 17,\r\n                          fontFamily: 'Poppins_500Medium',\r\n                          color: '#77ADF6'\r\n                        }}>\r\n                          {res.procent}\r\n                        </Text>\r\n                      </View>\r\n                    )\r\n                  })}\r\n\r\n                </View>\r\n              )\r\n            })\r\n\r\n            }\r\n            {/*  {this.state.data.map((res, index) => {\r\n                        return (\r\n                            <View\r\n                                key={index}\r\n                                style={styles.sortMain}\r\n                            >\r\n                                <View style={styles.sorts}>\r\n                                    <View\r\n                                        style={{\r\n                                            flexDirection: 'row',\r\n                                        }}>\r\n                                        <Text\r\n                                            style={{\r\n                                                fontSize: 25,\r\n                                                fontWeight: '500',\r\n                                                marginRight: 14\r\n                                            }}>\r\n                                            {index + 1}\r\n                                        </Text>\r\n                                        <Text\r\n                                            style={{\r\n                                                marginTop: 11,\r\n                                            }}>\r\n                                            {res.created_at}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>\r\n                                <View>\r\n                                \r\n                                </View>\r\n                                <View>\r\n                                <Text>{res.designer_name}</Text>\r\n                                <Text>{res.designer_surname}</Text>\r\n                                <Text>{res.book_proizvoditel[0].price}</Text>\r\n                                </View>\r\n                                </View>\r\n                                )\r\n\r\n                    })}*/}\r\n\r\n\r\n\r\n          </ScrollView>\r\n        </View>\r\n        <DesignerPageNavComponent active_page={'Брони'} navigation={this.props.navigation} />\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  main: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    paddingHorizontal: 15,\r\n  },\r\n  sortMain: {\r\n    width: '100%',\r\n    borderWidth: 3,\r\n    marginBottom: 15,\r\n    borderColor: '#E5E5E5',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n  sorts: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}