{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { memo, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width - 25;\nexport default React.memo(function Slider(props) {\n  var urlImage = 'http://80.78.246.59/Refectio/storage/app/uploads/';\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgActive = _useState2[0],\n      setInmageActive = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      img = _useState4[0],\n      setImg = _useState4[1];\n\n  var change = function change(nativeEvent) {\n    var slider = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\n\n    if (slider !== imgActive) {\n      setInmageActive(slider);\n    }\n  };\n\n  useEffect(function () {\n    var images = props.slid;\n    setImg(images);\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(ScrollView, {\n      horizontal: true,\n      pagingEnabled: true,\n      showsHorizontalScrollIndicator: false,\n      style: styles.wrap,\n      onScroll: function onScroll(_ref) {\n        var nativeEvent = _ref.nativeEvent;\n        return change(nativeEvent);\n      },\n      children: img.map(function (item, index) {\n        return _jsx(Image, {\n          source: {\n            uri: urlImage + item.image\n          },\n          style: {\n            height: '100%',\n            width: width,\n            resizeMode: \"cover\"\n          }\n        }, index);\n      })\n    }), _jsx(View, {\n      style: styles.wrapDot,\n      children: img.map(function (dots, index) {\n        return _jsx(Pressable, {\n          style: imgActive == index ? styles.dotActive : styles.dot\n        }, index);\n      })\n    })]\n  });\n});\nvar styles = StyleSheet.create({\n  wrap: {\n    width: width,\n    height: 176,\n    resizeMode: 'cover'\n  },\n  wrapDot: {\n    position: 'absolute',\n    bottom: 10,\n    flexDirection: 'row',\n    alignSelf: 'center'\n  },\n  dot: {\n    margin: 0,\n    marginHorizontal: 3,\n    width: 10,\n    height: 5,\n    backgroundColor: \"#fff\",\n    borderRadius: 3\n  },\n  dotActive: {\n    margin: 0,\n    marginHorizontal: 3,\n    width: 30,\n    height: 5,\n    backgroundColor: \"#1571F0\",\n    borderRadius: 3\n  }\n});","map":{"version":3,"names":["React","memo","useEffect","useState","width","Dimensions","get","Slider","props","urlImage","imgActive","setInmageActive","img","setImg","change","nativeEvent","slider","Math","ceil","contentOffset","x","layoutMeasurement","images","slid","styles","wrap","map","item","index","uri","image","height","resizeMode","wrapDot","dots","dotActive","dot","StyleSheet","create","position","bottom","flexDirection","alignSelf","margin","marginHorizontal","backgroundColor","borderRadius"],"sources":["C:/Users/Hopar/Desktop/redect/RefectionApp/components/slider/Slider.js"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react';\r\nimport { StyleSheet, View, Image, Dimensions, ScrollView, Pressable } from 'react-native';\r\n\r\nconst width = Dimensions.get('window').width - 25\r\n\r\n\r\n\r\n\r\nexport default React.memo(function Slider(props) {\r\n  let urlImage = 'http://80.78.246.59/Refectio/storage/app/uploads/';\r\n  const [imgActive, setInmageActive] = useState(0)\r\n  const [img, setImg] = useState([])\r\n\r\n\r\n\r\n  const change = (nativeEvent) => {\r\n    const slider = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\r\n    if (slider !== imgActive) {\r\n      setInmageActive(slider)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let images = props.slid;\r\n    setImg(images)\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <View>\r\n      <ScrollView\r\n        horizontal={true}\r\n        pagingEnabled\r\n        showsHorizontalScrollIndicator={false}\r\n        style={styles.wrap}\r\n        onScroll={({ nativeEvent }) => change(nativeEvent)}\r\n      >\r\n        {\r\n          img.map((item, index) => {\r\n            return (\r\n              <Image\r\n                source={{ uri: urlImage + item.image }}\r\n                style={{ height: '100%', width, resizeMode: \"cover\" }}\r\n                key={index}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </ScrollView>\r\n      <View style={styles.wrapDot}>\r\n        {\r\n          img.map((dots, index) => {\r\n            return (\r\n              <Pressable\r\n                style={imgActive == index ? styles.dotActive : styles.dot}\r\n                key={index}>\r\n              </Pressable>\r\n            )\r\n          })\r\n        }\r\n      </View>\r\n    </View>\r\n  )\r\n\r\n})\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  wrap: {\r\n    width: width,\r\n    height: 176,\r\n    resizeMode: 'cover'\r\n  },\r\n  wrapDot: {\r\n    position: 'absolute',\r\n    bottom: 10,\r\n    flexDirection: 'row',\r\n    alignSelf: 'center'\r\n  },\r\n  dot: {\r\n    margin: 0,\r\n    marginHorizontal: 3,\r\n    width: 10,\r\n    height: 5,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 3,\r\n\r\n  },\r\n  dotActive: {\r\n    margin: 0,\r\n    marginHorizontal: 3,\r\n    width: 30,\r\n    height: 5,\r\n    backgroundColor: \"#1571F0\",\r\n    borderRadius: 3\r\n  },\r\n});\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}